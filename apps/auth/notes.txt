=============================================================================================
EMAIL CONFIRMATION FOR REGISTRATION
=============================================================================================

@auth.route("/register", methods=["POST", "GET", "PUT" "DELETE"])
def register():
    if current_user.is_authenticated:
        return redirect(url_for("home.index"))
    else:
        form = forms.RegisterForm()
        if form.validate_on_submit():
            user = models.User(
                email=form.email.data,
                username=form.username.data,
                password=form.password.data,
            )

            db.session.add(user)
            db.session.commit()

            session["unconfirmed_user"] = form.username.data
            get_user_id = User.query.filter_by(username=form.username.data).first().id
            user_detail = models.UserDetail(id_user=get_user_id)
            db.session.add(user_detail)
            db.session.commit()

            email = form.email.data
            token = email_confirm.dumps(email, salt="email-confirm")
            msg = Message(
                "Konfirmasi Akun",
                sender="kamseupai@makeitation.com",
                recipients=[email],
            )
            link = url_for("auth.confirmation", token=token, external=True)

            host_server = host()
            msg.html = "<html>Silahkan konfirmasi akun Anda dengan mengklik link di bawah ini : <br> <strong> <a href='{}{}'> KONFIRMASI </a> </strong></html>".format(
                host_server, link
            )
            mail.send(msg)
            return render_template("confirmation.html")
        return render_template("register.html", form=form)



if form.validate_on_submit() and request.method == "POST":
            user = User.query.filter_by(username=form.username.data).first()
            try:
                check_user_confirmed = user.confirmation_status
                if (
                    user.check_password(form.password.data)
                    and user is not None
                    or check_user_confirmed is True
                ):

                    login_user(user)
                    next = request.args.get("next")
                    if next == None or not next[0] == "/":
                        next = url_for("home.index")
                    return redirect(next)
                elif (
                    user.check_password(form.password.data)
                    and user is not None
                    and check_user_confirmed is False
                ):
                    flash(
                        "Akun belum terkonfirmasi, silahkan cek email Anda !", "danger"
                    )
                    return redirect(url_for("auth.login"))
                else:
                    flash("Username / password Anda salah", "danger")
                    return redirect(url_for("auth.login"))

            except AttributeError:
                flash("Akun anda tidak terdaftar, silahkan register dulu !", "danger")
                return redirect(url_for("auth.login"))
        return render_template("login.html", form=form)